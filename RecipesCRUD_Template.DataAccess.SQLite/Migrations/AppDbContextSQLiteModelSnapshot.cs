// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipesCRUD_Template.DataAccess.SQLite;

#nullable disable

namespace RecipesCRUD_Template.DataAccess.SQLite.Migrations
{
    [DbContext(typeof(AppDbContextSQLite))]
    partial class AppDbContextSQLiteModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.MaterialCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("MaterialCategories");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.MaterialValuePair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaterialId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RecipeId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MaterialValues");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.RecipeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ParentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("RecipeCategories");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.Material", b =>
                {
                    b.HasOne("RecipesCRUD_Template.Core.Models.MaterialCategory", "Category")
                        .WithMany("Materials")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.MaterialCategory", b =>
                {
                    b.HasOne("RecipesCRUD_Template.Core.Models.MaterialCategory", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.MaterialValuePair", b =>
                {
                    b.HasOne("RecipesCRUD_Template.Core.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipesCRUD_Template.Core.Models.Recipe", "Recipe")
                        .WithMany("Materials")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.Recipe", b =>
                {
                    b.HasOne("RecipesCRUD_Template.Core.Models.RecipeCategory", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.RecipeCategory", b =>
                {
                    b.HasOne("RecipesCRUD_Template.Core.Models.RecipeCategory", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.MaterialCategory", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.Recipe", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("RecipesCRUD_Template.Core.Models.RecipeCategory", b =>
                {
                    b.Navigation("Recipes");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
